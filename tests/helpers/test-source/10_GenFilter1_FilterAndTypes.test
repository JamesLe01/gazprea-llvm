function cheq(character a, character b) returns boolean;

procedure main() returns integer {
    var tuple(real[*] a, integer[*] b, integer[*] c, integer[*] d) t1 = [i in [0, 1] & 
        i == 1, 
        i != 0, 
        i % 2 == 0];
    var t2 = [i in [0.1, -1.1] & 
        i < 0, 
        i >= -1.1, 
        i % -1.1 == 0];
    var t3 = [i in [true, false] & 
        i, 
        i xor i, 
        i or i, 
        i and i];
    var t4 = [i in ['a', 'b'] & 
        cheq(i, i), 
        not cheq(i, 'a'), 
        cheq(i, (" " || i || i)[2]), 
        false];

    t1.a -> std_output;
    t1.b -> std_output;
    t1.c -> std_output;
    t1.d -> std_output;
    '\n' -> std_output;
    t2.1 -> std_output;
    t2.2 -> std_output;
    t2.3 -> std_output;
    t2.4 -> std_output;
    '\n' -> std_output;
    t3.1 -> std_output;
    t3.2 -> std_output;
    t3.3 -> std_output;
    t3.4 -> std_output;
    t3.5 -> std_output;
    '\n' -> std_output;
    t4.1 -> std_output;
    t4.2 -> std_output;
    t4.3 -> std_output;
    t4.4 -> std_output;
    t4.5 -> std_output;

    return 0;
}

function cheq(character a, character b) returns boolean = as<integer>(a) == as<integer>(b);

#split_token
#split_token
[1][1][0][]
[-1.1][0.1 -1.1][-1.1][]
[true][][true][true][false]
[a b][][a b][][]