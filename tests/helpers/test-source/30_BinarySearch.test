/* Valid Test Case 20: Binary Search */
// Testing for part 2


typedef integer int;
typedef character char;

procedure found(int index) {
    char[*] founds = ['f', 'o', 'u', 'n', 'd', ' ', 'a', 't', ':', ' '];
    founds -> std_output;
    index -> std_output;
    '\n' -> std_output;
}

procedure nfound() {
    char[10] notfound = ['n', 'o', 't', ' ', 'f', 'o', 'u', 'n', 'd', '\n'];
    notfound -> std_output;
}

procedure bnsrch(var int[*] array, int size, int target) 
{
    /*Get the middle*/
    int lo = 1; var hi = size;

    loop while hi - lo > 1 {
        var mid = as<int>((hi+lo) / 2); /* Cast the real to int */
        if (array[mid] < target) {
            lo = mid + 1;
        } else {
            hi = mid;
        }
    }

    if (array[lo] == target) {
        call found(lo);
    } else if (array[hi] == target) {
        found(hi);
    } else {
        nfound();
    }
}

procedure main() returns int {
    var array = [1, 2, 5, 10, 45, 123, 3465, 342342, 231233, 2147483647];
    bnsrch(array, 10, 2147483647); /* Output 10 */
    bnsrch(array, 10, 123); /* Output 6 */
    bnsrch(array, 10, 342342); /* Output 8 */
    bnsrch(array, 10, 1); /* Output 1 */
    bnsrch(array, 10, 123123); /* Output not found */
    return 0;
}