typedef integer int;

const int INT_MAX = 2147483647;
const int INT_MIN = -2147483648;

procedure test1() {
    // Lets try something simple
    real[*] vec = [1, 3.8, 4];
    real[*] vec2 = [34.4, 435.6, 43.2];

    loop yeet in [-1, 34, 2, -2, -2147483648] {
        yeet + 10 -> std_out; ":" -> std_out;
        yeet -> std_out; '\n' -> std_out;
    } 
    /* Should print 
        9:-1
        44:34
        12:2
        8:-2
        -2147483638:-2147483648
    */
    '\n' -> std_out;

    loop vec in vec {
        vec -> std_out; " " -> std_out;
        vec = 1.1;
    } // Should print 1 3.8 4
    '\n' -> std_out;
    vec -> std_out; // Should print [1 3.8 4]
    '\n' -> std_out;

    loop vec2 in vec2, vec in vec {
        vec2 * vec -> std_out; " " -> std_out;
    } // Should print 
    '\n' -> std_out;

    loop vec in vec vec+2.2 -> std_out; // Should print 3.266.2

    '\n' -> std_out;

    loop vec2 in vec2 {
        vec[1] + 5 -> std_out; '\n' -> std_out;
        loop vec in vec {
            vec2 * vec -> std_out; " " -> std_out;
        }
    }

    '\n' -> std_out;

    /*
    9:-1
    44:34
    12:2
    8:-2
    -2147483638:-2147483648

    1 3.8 4 
    [1 3.8 4]
    34.4 130.72 137.6 435.6 1655.28 1742.4 43.2 164.16 172.8 
    3.266.2
    6
    34.4 130.72 137.6 6
    435.6 1655.28 1742.4 6
    43.2 164.16 172.8
    */
}

procedure test2() {
    // Try break with loop
    loop i in [1, 2, 3, 4, 5] {
        i -> std_out;
        if (i == 3) {
            break;
        }
    }
    '\n' -> std_out;
    // Should 123
}

procedure test3() {
    // Try continue with loop
    loop i in 1..10 by 2 {
        if (i == 5) {
            continue;
        }
        i -> std_out;
    }
    '\n' -> std_out;
    // Should print 1379
}

procedure test4() returns real {
    // Try return with loop
    loop i in [i in [-23.2, 1.5, 12.23, 42.1] | i+10] {
        if i == 22.23 return i;
    }
}

procedure test45() {
    // Try return with loop
    loop i in [i in [-23.2, 1.5, 12.23, 42.1] | i] {
        if i == 1.5 return;
    }
}

procedure test5(var int[*] arr) returns int {
    // Referencing arr iterator loop
    loop i in arr {
        i -> std_out; '\n' -> std_out;
    }
    return length(arr);
}

procedure main() returns integer {
    //int[*] arr1 = -2147483648..-2147483638;
    int[*] arr2 = 2147483637..2147483647;
    real[*] arr3 = [12.134, 13.5345, 231.232, 645.23];
    real yee = 0.0;

    call test1();
    call test2();
    //call test3();
    yee = test4(); yee -> std_out; '\n' -> std_out; // Should print 22.23
    call test45();
    call test5(arr2);

    return 0;
}
#split_token
#split_token
9:-1
44:34
12:2
8:-2
-2147483638:-2147483648

1 3.8 4 
[1 3.8 4]
34.4 130.72 137.6 435.6 1655.28 1742.4 43.2 164.16 172.8 
3.266.2
6
34.4 130.72 137.6 6
435.6 1655.28 1742.4 6
43.2 164.16 172.8 
123
22.23
2147483637
2147483638
2147483639
2147483640
2147483641
2147483642
2147483643
2147483644
2147483645
2147483646
2147483647