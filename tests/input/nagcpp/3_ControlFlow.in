procedure main() returns integer {

    integer r = 0; 
    if(r <= 100) {
        r -> std_output;
    }
    integer s = 50;
    if(s >= 10) {
        s -> std_output;
    }

    integer p = 10;
    loop while (p > 0){
        if (p >= 2) {
            p -> std_output;
        }
        p = p - 1;
    }
    
    integer y = 10;
    loop while(y >= 0) {
        y -> std_output;
        y = y - 1;
    }

    typedef integer int;
    int xx = 0;
    loop while(xx != 100){
        xx -> std_output; 
        xx = xx + 10;
    }

    integer xyz = 9;
    if( xyz == 1 ) {}
    else if ( xyz == 3 ) { xyz -> std_output; } 
    else if ( xyz == 5 ) { xyz -> std_output; } 
    else if ( xyz == 7 ) { xyz -> std_output; } 
    else if ( xyz == 9 ) { xyz -> std_output; } 
    else {
        0 -> std_output;
    } 

    
    integer c = 0;
    loop {
        integer r = 3;
        c -> std_output; 
        if( c >= 10){
            integer k = 10;
            loop while (k >= 1) {
                k -> std_output; 
                k = k -1;
            }
            integer p = 0;
            loop while (p <= 10) {
                if ( p == 2 ) { 
                    7 -> std_output;
                } else if ( p ==  3 ) {
                    (p + 2 / 4 * 4 % 100)-> std_output; 
                } else {
                    r -> std_output;
                    (p + 2 * 4 % 4) -> std_output;
                }
                p = p + 1;
            }
            break;
        }
        c = c + 1;
    }

        // if, else if & else
    integer xab = 0;
    if (xab < 10) {
        1 -> std_output; 
        if (xab <= 0) {
            0 -> std_output; 
            integer y = 1; 
            if (y >= 10) {
                2 -> std_output;
            } else {
                y -> std_output;
            }
        } else if (xab <= 1) {
            1 -> std_output; 
        } else if (xab <= 0) {
            1 -> std_output; 
        }
    } else if(xab >= 10) {
        0 -> std_output; 

    } else {
        0 -> std_output; 
    }

    // scoping
    integer z = 1;
    if (true) {
        z = 2;
        z -> std_output;
        if( z >= 2) {
            z = 3;   
        } else if (true) {
            z = 7;
        }
    }
    z -> std_output;

    // infinite loop -- break & continue   
    loop break;
    //loop continue; // comment out because inifinite


    integer q = 0;
    loop while (q <= 10) {
        q = q + 1;
    }

    //long nested 
        if(true){
         if(true){
            if(true){
                if(true){
                    if(true){
                        true -> std_output;
                    }
                }
            }
        }  
    }

    //post predicated
    integer x = 0;
    loop {
        x -> std_output; 
        x = x + 1;
    } while x < 10;

    //loop 1 -> std_output; while true; //infinite

 
    return 0;
} 